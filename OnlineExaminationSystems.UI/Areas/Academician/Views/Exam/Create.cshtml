@model OnlineExaminationSystems.UI.Areas.Academician.Models.Exam.ExamUpdateRequestModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create Exam</h1>

<hr />
<div class="row justify-content-center">
    <div class="col-md-6">
        <form method="post" id="create-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <input name="lessonId" value="@TempData["lessonId"]" hidden />
            <div class="form-group">
                <label class="control-label">Question Count</label>
                <input asp-for="QuestionCount" class="form-control" />
                <span asp-validation-for="QuestionCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Duration" class="control-label"></label>
                <input asp-for="Duration" class="form-control" />
                <span asp-validation-for="Duration" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Started Date</label>
                <input asp-for="StartedDate" class="form-control" />
                <span asp-validation-for="StartedDate" class="text-danger"></span>
            </div>
            <div class="form-group" style="margin-bottom:20px"></div>
            <div class="form-group row">
                <div class="col-md-12">
                    <input type="submit" value="Create" class="btn btn-primary w-100" />
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var form = document.getElementById('create-form');
            form.addEventListener('submit', function (event) {
                event.preventDefault(); 

                var formData = new FormData(form);

                fetch('/Exam/CreatePost', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        toastr.success('Exam successfully added!');
                        setTimeout(() => {
                            window.location.reload();
                        }, 2500);
                    })
                    .catch(error => {
                        console.error('İstek gönderilirken bir hata oluştu:', error);
                    });
            });
        });
    </script>

}
